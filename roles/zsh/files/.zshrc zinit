# Enable Powerlevel10k instant prompt. Should stay close to the top of ~/.zshrc.
# Initialization code that may require console input (password prompts, [y/n]
# confirmations, etc.) must go above this block; everything else may go below.
#if [[ -r "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh" ]]; then
#  source "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh"
#fi

# PATH
eval "$(/home/linuxbrew/.linuxbrew/bin/brew shellenv)"
export PATH="/home/linuxbrew/.linuxbrew/bin:/usr/local/bin:/usr/bin:/bin"
eval "$(zellij setup --generate-auto-start zsh)"
source $HOMEBREW_PREFIX/opt/zinit/zinit.zsh

# BIND
bindkey "^[[3~" delete-char      # rebind del key from "^[[3~" to "delete-char"
bindkey "^[[H" beginning-of-line # Home key: move to beginning of line
bindkey "^[[F" end-of-line       # End key: move to end of line

# ALIASES
alias ..="cd .."
alias ...="cd ../.."
alias "apbm"="ansible-playbook main.yml"
alias "apbmv"="ansible-playbook main.yml --tags=versions"
alias cat="bat"
alias cls="clear"
alias gl="git pull"
alias kctx="kubectx"
alias kgns="kubectl get namespaces"
alias kgno="kubectl get nodes"
alias kns="kubens"
alias kubectl="kubecolor"
alias la="eza -la --icons"
alias ls="eza -a --icons"
alias szshrc="source ~/.zshrc"
alias tree="eza -T"
alias zshrc="vim ~/.zshrc"
#compdef kubecolor=kubectl

# HISTORY
HISTFILE=~/.histfile
HISTSIZE=1000
SAVEHIST=10000
export HISTTIMEFORMAT="%Y-%m-%d %H:%M:%S " # Example: 2025-04-19 14:32:01
setopt APPEND_HISTORY                      # append to the history file rather than replace it
setopt INC_APPEND_HISTORY                  # don’t wait for shell to exit to save history lines
setopt SHARE_HISTORY                       # Makes history consistent across multiple sessions (like WSL + VSCode).
setopt BANG_HIST                           # enable “!” history expansion
setopt EXTENDED_HISTORY                    # include timestamp
setopt HIST_IGNORE_SPACE                   # do not save if line starts with space
setopt HIST_REDUCE_BLANKS                  # strip superfluous blanks
setopt HIST_IGNORE_DUPS                    # do not save duplicate of prior command
setopt HIST_VERIFY                         # expand line without executing it

# ZSH OPTIONS
setopt CORRECT # corriger les fautes de frappe sur les commandes
setopt AUTO_CD # cd juste avec le nom du dossier

# Update terminal/pane
function preexec() {
  print -Pn "\e]0;$1 %~\a"
}

function precmd() {
  print -Pn "\e]0;%~\a"
}

# ZINIT
if [[ ! -f $HOME/.local/share/zinit/zinit.git/zinit.zsh ]]; then
    print -P "%F{33} %F{220}Installing %F{33}ZDHARMA-CONTINUUM%F{220} Initiative Plugin Manager (%F{33}zdharma-continuum/zinit%F{220})…%f"
    command mkdir -p "$HOME/.local/share/zinit" && command chmod g-rwX "$HOME/.local/share/zinit"
    command git clone https://github.com/zdharma-continuum/zinit "$HOME/.local/share/zinit/zinit.git" && \
        print -P "%F{33} %F{34}Installation successful.%f%b" || \
        print -P "%F{160} The clone has failed.%f%b"
fi

source "$HOME/.local/share/zinit/zinit.git/zinit.zsh"
autoload -Uz _zinit
(( ${+_comps} )) && _comps[zinit]=_zinit

zinit light-mode for \
    zdharma-continuum/zinit-annex-as-monitor \
    zdharma-continuum/zinit-annex-bin-gem-node \
    zdharma-continuum/zinit-annex-patch-dl \
    zdharma-continuum/zinit-annex-rust

zinit ice depth=1; zinit light romkatv/powerlevel10k
zinit ice lucid wait'0'
zinit light joshskidmore/zsh-fzf-history-search
zinit light zsh-users/zsh-autosuggestions
zinit light olets/zsh-abbr
zinit light zdharma-continuum/fast-syntax-highlighting
zinit light marlonrichert/zsh-autocomplete
zinit light Aloxaf/fzf-tab

# POWERLEVEL10K
[[ ! -f ~/.p10k.zsh ]] || source ~/.p10k.zsh

# ABBR
ABBR_EXPAND_PUSH_ABBREVIATION_TO_HISTORY=0
ABBR_SET_EXPANSION_CURSOR=1
ABBR_EXPANSION_CURSOR_MARKER=%
ABBR_SET_LINE_CURSOR=1
ABBR_GET_AVAILABLE_ABBREVIATION=1
ABBR_LOG_AVAILABLE_ABBREVIATION=0

my_abbreviation_reminder() {
  if [[ -n "$ABBR_UNUSED_ABBREVIATION" ]]; then
    # Set color codes
    local red="\e[31m"
    local reset="\e[0m"  # Reset color back to normal

    # Display the custom reminder with proper colors
    echo -e "Reminder: You could have used the abbreviation '${red}$ABBR_UNUSED_ABBREVIATION${reset}' for '${red}$ABBR_UNUSED_ABBREVIATION_EXPANSION${reset}'."
  fi
}

# Add the function to the preexec hook to run before each command
autoload -U add-zsh-hook
add-zsh-hook preexec my_abbreviation_reminder